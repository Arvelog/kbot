name: KBOT-CICD

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build the project
        run: make build

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: make docker-build

      - name: Push Docker image
        run: make docker-push

  cd:
    name: CD
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set VERSION environment variable
        run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Update Helm chart values
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION)' helm/values.yaml

      - name: Commit updated values.yaml
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote set-url origin https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git stash --include-untracked
          git pull origin main --strategy-option ours
          git stash pop || true
          git add helm/values.yaml
          git commit -m "update version $VERSION" --allow-empty
          git push origin HEAD:main

      - name: Print Kubernetes Service Host and Port
        run: |
          echo "KUBERNETES_SERVICE_HOST=${{ secrets.KUBERNETES_SERVICE_HOST }}"
          echo "KUBERNETES_SERVICE_PORT=${{ secrets.KUBERNETES_SERVICE_PORT }}"

      - name: Set up kubectl
        run: |
          echo "https://${{ secrets.KUBERNETES_SERVICE_HOST }}:${{ secrets.KUBERNETES_SERVICE_PORT }}" > server.txt
          echo "${{ secrets.KUBERNETES_TOKEN }}" > token.txt
          kubectl config set-cluster default-cluster --server=$(cat server.txt) --insecure-skip-tls-verify=true
          kubectl config set-credentials default-admin --token=$(cat token.txt)
          kubectl config set-context default-system --cluster=default-cluster --user=default-admin
          kubectl config use-context default-system

      - name: Print Kubernetes Configuration
        run: kubectl config view

      - name: Print Kubernetes Token
        run: cat token.txt

      - name: Check KUBERNETES configuration
        run: kubectl get nodes

      - name: Deploy to Kubernetes with Helm
        run: make helm-deploy
