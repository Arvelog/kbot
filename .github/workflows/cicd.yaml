name: KBOT-CICD

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build the project
        run: make build

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run:  make docker-build

      - name: Push Docker image
        run: make docker-push

  cd:
    name: CD
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create a Kubernetes cluster with kind
        run: |
          kind create cluster --wait 5m
          echo "KUBECONFIG=$(kind get kubeconfig-path --name="kind")" >> $GITHUB_ENV

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Ensure Git Tags Exist
        run: |
          if ! git describe --tags --abbrev=0; then
            git tag -a v0.0.1 -m "Initial tag"
            git push origin --tags
          fi

      - name: Set VERSION environment variable
        run: |
          VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD || echo "unknown")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Update Helm chart values using yq
        uses: mikefarah/yq@v4.27.5
        with:
          cmd: yq -i '.image.tag=strenv(VERSION)' helm/values.yaml

      - name: Load Docker Image into kind
        run: |
          kind load docker-image my-image:tag --name kind

      - name: Commit updated values.yaml
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote set-url origin https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git stash --include-untracked
          git pull origin main --strategy-option ours
          git stash pop || true
          git add helm/values.yaml
          git commit -m "update version $VERSION" --allow-empty
          git push origin HEAD:main

      - name: Install Helm (if needed)
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install my-release helm/ --set image.tag=$VERSION

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/my-deployment
          kubectl get services -o wide